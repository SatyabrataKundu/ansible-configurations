---
- name: Test that we have an ACI hostname, username, and password
  fail:
    msg: 'Please define the variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined
  vars:
    login_info: &login_info
      hostname: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"

- name: Include Tenant vars
  include_vars:
    file: "{{ tenant_name }}.yml"

- name: ENSURE TENANT VRF EXISTS
  aci_vrf:
    <<: *login_info
    tenant: "{{ tenant_name }}"
    vrf: "{{ vrf }}"
    description: "VRF Created Using Ansible"
    state: "{{ aci_state }}"
    validate_certs: false

- name: ENSURE TENANT BRIDGE DOMAIN EXISTS
  aci_bd:
    <<: *login_info
    tenant: "{{ tenant_name }}"
    bd: "{{ bridge_domain }}"
    vrf: "{{ vrf }}"
    description: "Bridge Domain Created Using Ansible"
    state: "{{ aci_state }}"
    validate_certs: false

- name: ENSURE TENANT SUBNET EXISTS
  aci_bd_subnet:
    <<: *login_info
    tenant: "{{ tenant_name }}"
    bd: "{{ bridge_domain }}"
    gateway: "{{ gateway }}"
    mask: "{{ mask }}"
    scope: "public"
    description: "Subnet Created Using Ansible"
    state: "{{ aci_state }}"
    validate_certs: false

- name: ENSURE TENANT FILTERS EXIST
  aci_filter:
    <<: *login_info
    tenant: "{{ tenant_name }}"
    filter: "{{ item }}"
    descr: "Filter Created Using Ansible"
    state: "{{ aci_state }}"
    validate_certs: false
  with_items:
    - "https"
    - "sql"

- name: ENSURE FILTERS HAVE FILTER ENTRIES
  aci_filter_entry:
    <<: *login_info
    state: "{{ aci_state }}"
    validate_certs: False
    tenant: "{{ tenant_name }}"
    filter: "{{ item.filter }}"
    entry: "{{ item.entry }}"
    ether_type: "ip"
    ip_protocol: "tcp"
    dst_port_start: "{{ item.port }}"
    dst_port_end: "{{ item.port }}"
  with_items:
    - filter: "https"
      entry: "https"
      port: 443
    - filter: "sql"
      entry: "sql"
      port: 1433

- name: ENSURE TENANT CONTRACTS EXIST
  aci_contract:
    <<: *login_info
    state: "{{ aci_state }}"
    validate_certs: False
    tenant: "{{ tenant_name }}"
    contract: "{{ item }}"
    scope: "context"
    description: "Contract Created Using Ansible"
  with_items:
    - "web"
    - "sql"

- name: ENSURE CONTRACTS HAVE CONTRACT SUBJECTS
  aci_contract_subject:
    <<: *login_info
    state: "{{ aci_state }}"
    validate_certs: False
    tenant: "{{ tenant_name }}"
    contract: "{{ item.contract }}"
    subject: "{{ item.subject }}"
  with_items:
    - contract: "web"
      subject: "https"
    - contract: "sql"
      subject: "sql"

- name: ENSURE CONTRACTS SUBJECTS ARE ASSOCIATED WITH FILTERS
  aci_contract_subject_to_filter:
    <<: *login_info
    state: "{{ aci_state }}"
    validate_certs: False
    tenant: "{{ tenant_name }}"
    contract: "{{ item.contract }}"
    subject: "{{ item.subject }}"
    filter: "{{ item.filter }}"
  with_items:
    - contract: "web"
      subject: "https"
      filter: "https"
    - contract: "sql"
      subject: "sql"
      filter: "sql"